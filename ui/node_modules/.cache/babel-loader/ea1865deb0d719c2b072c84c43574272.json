{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/cole.sluggett/Documents/git/Review-Me/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/cole.sluggett/Documents/git/Review-Me/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cole.sluggett/Documents/git/Review-Me/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cole.sluggett/Documents/git/Review-Me/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cole.sluggett/Documents/git/Review-Me/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cole.sluggett/Documents/git/Review-Me/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cole.sluggett/Documents/git/Review-Me/ui/src/ProfilePage.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n              query User($name: String!){\\n                User(username: $name, first:1){ \\n                  reviews_received{\\n                    stars\\n                    title\\n                    text\\n                    reviewWriter{\\n                      username\\n                      firstName\\n                      lastName\\n                    }\\n                  }\\n                  username\\n                  firstName\\n                  id\\n                  lastName\\n                  sex\\n                  location\\n                }\\n              }\\n          \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText } from 'reactstrap';\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nexport var ProfilePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfilePage, _Component);\n\n  function ProfilePage(props) {\n    var _this;\n\n    _classCallCheck(this, ProfilePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfilePage).call(this, props));\n    _this.state = {\n      name: _this.props.name\n    };\n    return _this;\n  }\n\n  _createClass(ProfilePage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Query, {\n        query: gql(_templateObject()),\n        variables: {\n          name: this.state.name\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        if (loading) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Loading...\");\n        if (error) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Error\");\n        var userInfo = data.User[0];\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"picContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"profilePic\",\n          src: process.env.PUBLIC_URL + \"/img/pp.jpg\",\n          alt: \"profile pic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        })), React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, userInfo.firstName, \" \", userInfo.lastName), React.createElement(CardSubtitle, {\n          className: \"basicInfo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"ID: \", userInfo.id), React.createElement(CardSubtitle, {\n          className: \"basicInfo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, userInfo.location), React.createElement(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Write Review\"), React.createElement(CardText, {\n          className: \"reviewBoard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(ListGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(ListGroupItem, {\n          className: \"reviewHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Reviews\"), userInfo.reviews_received.map(function (review) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, React.createElement(ListGroupItem, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(ListGroupItemHeading, {\n            className: \"reviewTitle\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, review.reviewWriter.firstName, \" \", review.reviewWriter.lastName, \" - \", review.title), React.createElement(ListGroupItemHeading, {\n            className: \"reviewStars\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, review.stars, \"/5\"), React.createElement(ListGroupItemText, {\n            className: \"reviewText\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, review.text)));\n        })))))));\n      });\n    }\n  }]);\n\n  return ProfilePage;\n}(Component);","map":{"version":3,"sources":["/Users/cole.sluggett/Documents/git/Review-Me/ui/src/ProfilePage.js"],"names":["React","Component","ListGroup","ListGroupItem","ListGroupItemHeading","ListGroupItemText","gql","Query","Card","CardText","CardBody","CardTitle","CardSubtitle","Button","ProfilePage","props","state","name","loading","error","data","userInfo","User","process","env","PUBLIC_URL","firstName","lastName","id","location","reviews_received","map","review","reviewWriter","title","stars","text"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    ListGroup, ListGroupItem,\n    ListGroupItemHeading, ListGroupItemText\n} from 'reactstrap';\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport {\n    Card, CardText, CardBody,\n    CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nexport class ProfilePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { name: this.props.name };\n    }\n\n    render() {\n        return (\n            <Query\n                query={gql`\n              query User($name: String!){\n                User(username: $name, first:1){ \n                  reviews_received{\n                    stars\n                    title\n                    text\n                    reviewWriter{\n                      username\n                      firstName\n                      lastName\n                    }\n                  }\n                  username\n                  firstName\n                  id\n                  lastName\n                  sex\n                  location\n                }\n              }\n          `}\n                variables={{ name: this.state.name }}\n            >\n                {({ loading, error, data }) => {\n                    if (loading) return <p>Loading...</p>;\n                    if (error) return <p>Error</p>;\n                    let userInfo = data.User[0];\n                    return (\n                        <div>\n                            <div>\n                                <Card>\n                                    <div className=\"picContainer\">\n                                        <img className=\"profilePic\" src={process.env.PUBLIC_URL + \"/img/pp.jpg\"} alt=\"profile pic\" />\n                                    </div>\n                                    <CardBody>\n                                        <CardTitle>{userInfo.firstName} {userInfo.lastName}</CardTitle>\n                                        <CardSubtitle className=\"basicInfo\">ID: {userInfo.id}</CardSubtitle>\n                                        <CardSubtitle className=\"basicInfo\">{userInfo.location}</CardSubtitle>\n                                        <Button>Write Review</Button>\n                                        <CardText className=\"reviewBoard\">\n                                            <ListGroup>\n                                                <ListGroupItem className=\"reviewHeader\">Reviews</ListGroupItem>\n                                                {userInfo.reviews_received.map(review => {\n                                                    return (\n                                                        <div>\n\n                                                            <ListGroupItem>\n                                                                <ListGroupItemHeading className=\"reviewTitle\">\n                                                                    {review.reviewWriter.firstName} {review.reviewWriter.lastName} - {review.title}\n                                                                </ListGroupItemHeading>\n                                                                <ListGroupItemHeading className=\"reviewStars\">\n                                                                    {review.stars}/5\n                                    </ListGroupItemHeading>\n                                                                <ListGroupItemText className=\"reviewText\">\n                                                                    {review.text}\n                                                                </ListGroupItemText>\n                                                            </ListGroupItem>\n                                                        </div>\n                                                    );\n                                                })\n                                                }\n                                            </ListGroup>\n                                        </CardText>\n\n                                    </CardBody>\n                                </Card>\n                            </div>\n                        </div>\n                    );\n                }\n                }\n            </Query>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}