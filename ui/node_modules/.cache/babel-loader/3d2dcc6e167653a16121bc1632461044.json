{"ast":null,"code":"import _regeneratorRuntime from \"/Users/cole.sluggett/Documents/git/Review-Me/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/cole.sluggett/Documents/git/Review-Me/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/Users/cole.sluggett/Documents/git/Review-Me/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cole.sluggett/Documents/git/Review-Me/ui/src/WriteReview.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n          {\\n            User{ \\n              username\\n              firstName\\n            }\\n          }\\n        \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CreateReview\\n    (\\n        $id: ID!, \\n        $title: String!, \\n        $stars: Int, \\n        $text: String,\\n        $id_from: ID!,\\n        $id_to: ID!\\n        ) \\n            {\\n        CreateReview\\n                    (\\n                        id: $id, \\n                        title: $title, \\n                        stars: $stars, \\n                        text: $text\\n                        ) {\\n        id\\n        }\\n        AddUserReviews_written\\n                    (\\n                        from: {\\n                            id: $id_from\\n                        }, to: {\\n                            id: $id\\n                        }) {\\n            from {\\n                id\\n            }\\n        }\\n        AddUserReviews_received\\n                    (\\n                        from: {\\n                            id: $id\\n                        }, to: {\\n                            id: $id_to\\n                        }) {\\n            from {\\n                id\\n            }\\n        }\\n  }\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Mutation, renderToStringWithData } from 'react-apollo';\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./SignUp.css\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport client from './index';\n\nfunction getId() {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < 8; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n}\n\nvar CREATE_REVIEW = gql(_templateObject());\nvar GET_USER = gql(_templateObject2());\n\nvar WriteReview = function WriteReview(_ref) {\n  var post = _ref.post,\n      onClose = _ref.onClose;\n  return React.createElement(FinalForm, {\n    onSubmit:\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref2) {\n        var id_from, password, title, stars, text, id_to, input;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id_from = _ref2.id_from, password = _ref2.password, title = _ref2.title, stars = _ref2.stars, text = _ref2.text, id_to = _ref2.id_to;\n                input = {\n                  id_from: id_from,\n                  password: password,\n                  title: title,\n                  stars: stars,\n                  text: text,\n                  id_to: id_to\n                };\n                _context.next = 4;\n                return client.mutate({\n                  mutation: CREATE_REVIEW,\n                  variables: {\n                    id: getId(),\n                    title: input.title,\n                    stars: 2,\n                    text: input.text,\n                    id_from: input.id_from,\n                    id_to: input.id_to\n                  },\n                  refetchQueries: function refetchQueries() {\n                    return [{\n                      query: GET_USER\n                    }];\n                  }\n                });\n\n              case 4:\n                onClose();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    initialValues: post,\n    render: function render(_ref4) {\n      var handleSubmit = _ref4.handleSubmit,\n          pristine = _ref4.pristine,\n          invalid = _ref4.invalid;\n      return React.createElement(Modal, {\n        isOpen: true,\n        toggle: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"New Review\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Your ID\"), React.createElement(Field, {\n        required: true,\n        name: \"id_from\",\n        className: \"form-control\",\n        component: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Your Password\"), React.createElement(Field, {\n        required: true,\n        name: \"password\",\n        className: \"form-control\",\n        component: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Who are you reviewing? (ID)\"), React.createElement(Field, {\n        required: true,\n        name: \"id_to\",\n        className: \"form-control\",\n        component: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Title\"), React.createElement(Field, {\n        required: true,\n        name: \"title\",\n        className: \"form-control\",\n        component: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Stars\"), React.createElement(Field, {\n        required: true,\n        name: \"stars\",\n        className: \"form-control\",\n        component: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Text\"), React.createElement(Field, {\n        required: true,\n        name: \"text\",\n        className: \"form-control\",\n        component: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        disabled: pristine,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Write Review\"), React.createElement(Button, {\n        color: \"secondary\",\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Cancel\"))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  });\n};\n\nexport default WriteReview;","map":{"version":3,"sources":["/Users/cole.sluggett/Documents/git/Review-Me/ui/src/WriteReview.js"],"names":["React","useState","Component","Col","Row","Button","Form","FormGroup","Label","Input","FormText","Mutation","renderToStringWithData","useMutation","gql","Modal","ModalHeader","ModalBody","ModalFooter","FinalForm","Field","client","getId","result","characters","charactersLength","length","i","charAt","Math","floor","random","CREATE_REVIEW","GET_USER","WriteReview","post","onClose","id_from","password","title","stars","text","id_to","input","mutate","mutation","variables","id","refetchQueries","query","handleSubmit","pristine","invalid"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,KAA5C,EAAmDC,KAAnD,EAA0DC,QAA1D,QAA0E,YAA1E;AACA,SAASC,QAAT,EAAmBC,sBAAnB,QAAiD,cAAjD;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAO,sCAAP;AACA,OAAO,cAAP;AACA,SACIC,KADJ,EAEIC,WAFJ,EAGIC,SAHJ,EAIIC,WAJJ,QAKO,YALP;AAMA,SAASZ,IAAI,IAAIa,SAAjB,EAA4BC,KAA5B,QAAyC,kBAAzC;AACA,OAAOC,MAAP,MAAmB,SAAnB;;AAEA,SAASC,KAAT,GAAiB;AACb,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,UAAU,GAAG,gEAAjB;AACA,MAAIC,gBAAgB,GAAGD,UAAU,CAACE,MAAlC;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBJ,IAAAA,MAAM,IAAIC,UAAU,CAACI,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,gBAA3B,CAAlB,CAAV;AACH;;AACD,SAAOF,MAAP;AACH;;AAED,IAAMS,aAAa,GAAGlB,GAAH,mBAAnB;AA8CA,IAAMmB,QAAQ,GAAGnB,GAAH,oBAAd;;AAUA,IAAMoB,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,OAAT,QAASA,OAAT;AAAA,SAChB,oBAAC,SAAD;AACI,IAAA,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACNC,gBAAAA,OADM,SACNA,OADM,EAENC,QAFM,SAENA,QAFM,EAGNC,KAHM,SAGNA,KAHM,EAINC,KAJM,SAINA,KAJM,EAKNC,IALM,SAKNA,IALM,EAMNC,KANM,SAMNA,KANM;AAOAC,gBAAAA,KAPA,GAOQ;AACVN,kBAAAA,OAAO,EAAPA,OADU;AAEVC,kBAAAA,QAAQ,EAARA,QAFU;AAGVC,kBAAAA,KAAK,EAALA,KAHU;AAIVC,kBAAAA,KAAK,EAALA,KAJU;AAKVC,kBAAAA,IAAI,EAAJA,IALU;AAMVC,kBAAAA,KAAK,EAALA;AANU,iBAPR;AAAA;AAAA,uBAgBArB,MAAM,CAACuB,MAAP,CAAc;AAChBC,kBAAAA,QAAQ,EAAEb,aADM;AAEhBc,kBAAAA,SAAS,EAAE;AAAEC,oBAAAA,EAAE,EAAEzB,KAAK,EAAX;AAAeiB,oBAAAA,KAAK,EAAEI,KAAK,CAACJ,KAA5B;AAAmCC,oBAAAA,KAAK,EAAE,CAA1C;AAA6CC,oBAAAA,IAAI,EAAEE,KAAK,CAACF,IAAzD;AAA+DJ,oBAAAA,OAAO,EAAEM,KAAK,CAACN,OAA9E;AAAuFK,oBAAAA,KAAK,EAAEC,KAAK,CAACD;AAApG,mBAFK;AAGhBM,kBAAAA,cAAc,EAAE;AAAA,2BAAM,CAAC;AAAEC,sBAAAA,KAAK,EAAEhB;AAAT,qBAAD,CAAN;AAAA;AAHA,iBAAd,CAhBA;;AAAA;AAqBNG,gBAAAA,OAAO;;AArBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OADZ;AAwBI,IAAA,aAAa,EAAED,IAxBnB;AAyBI,IAAA,MAAM,EAAE;AAAA,UAAGe,YAAH,SAAGA,YAAH;AAAA,UAAiBC,QAAjB,SAAiBA,QAAjB;AAAA,UAA2BC,OAA3B,SAA2BA,OAA3B;AAAA,aACJ,oBAAC,KAAD;AAAO,QAAA,MAAM,MAAb;AAAc,QAAA,MAAM,EAAEhB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEc,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAEd,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,KAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,SAAS,EAAC,cAHd;AAII,QAAA,SAAS,EAAC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAUI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,KAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,SAAS,EAAC,cAHd;AAII,QAAA,SAAS,EAAC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAVJ,EAmBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEI,oBAAC,KAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,SAAS,EAAC,cAHd;AAII,QAAA,SAAS,EAAC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAnBJ,EA4BI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,KAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,SAAS,EAAC,cAHd;AAII,QAAA,SAAS,EAAC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA5BJ,EAqCI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,KAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,SAAS,EAAC,cAHd;AAII,QAAA,SAAS,EAAC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CArCJ,EA8CI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,SAAS,EAAC,cAHd;AAII,QAAA,SAAS,EAAC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA9CJ,CAJJ,EA4DI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAEe,QAAhC;AAA0C,QAAA,KAAK,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,OAAO,EAAEf,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CA5DJ,CADJ,CADI;AAAA,KAzBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB;AAAA,CAApB;;AAkGA,eAAeF,WAAf","sourcesContent":["import React, { useState, Component } from 'react';\n\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Mutation, renderToStringWithData } from 'react-apollo';\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./SignUp.css\";\nimport {\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n} from 'reactstrap';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport client from './index';\n\nfunction getId() {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < 8; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nconst CREATE_REVIEW = gql`\n  mutation CreateReview\n    (\n        $id: ID!, \n        $title: String!, \n        $stars: Int, \n        $text: String,\n        $id_from: ID!,\n        $id_to: ID!\n        ) \n            {\n        CreateReview\n                    (\n                        id: $id, \n                        title: $title, \n                        stars: $stars, \n                        text: $text\n                        ) {\n        id\n        }\n        AddUserReviews_written\n                    (\n                        from: {\n                            id: $id_from\n                        }, to: {\n                            id: $id\n                        }) {\n            from {\n                id\n            }\n        }\n        AddUserReviews_received\n                    (\n                        from: {\n                            id: $id\n                        }, to: {\n                            id: $id_to\n                        }) {\n            from {\n                id\n            }\n        }\n  }\n\n`;\n\nconst GET_USER = gql`\n          {\n            User{ \n              username\n              firstName\n            }\n          }\n        `;\n\n\nconst WriteReview = ({ post, onClose }) => (\n    <FinalForm\n        onSubmit={async ({\n            id_from,\n            password,\n            title,\n            stars,\n            text,\n            id_to }) => {\n            const input = {\n                id_from,\n                password,\n                title,\n                stars,\n                text,\n                id_to\n            };\n\n            await client.mutate({\n                mutation: CREATE_REVIEW,\n                variables: { id: getId(), title: input.title, stars: 2, text: input.text, id_from: input.id_from, id_to: input.id_to},\n                refetchQueries: () => [{ query: GET_USER }],\n            });\n            onClose();\n        }}\n        initialValues={post}\n        render={({ handleSubmit, pristine, invalid }) => (\n            <Modal isOpen toggle={onClose}>\n                <Form onSubmit={handleSubmit}>\n                    <ModalHeader toggle={onClose}>\n                        New Review\n          </ModalHeader>\n                    <ModalBody>\n                        <FormGroup>\n                            <Label>Your ID</Label>\n                            <Field\n                                required\n                                name=\"id_from\"\n                                className=\"form-control\"\n                                component=\"input\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Your Password</Label>\n                            <Field\n                                required\n                                name=\"password\"\n                                className=\"form-control\"\n                                component=\"input\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Who are you reviewing? (ID)</Label>\n                            <Field\n                                required\n                                name=\"id_to\"\n                                className=\"form-control\"\n                                component=\"input\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Title</Label>\n                            <Field\n                                required\n                                name=\"title\"\n                                className=\"form-control\"\n                                component=\"input\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Stars</Label>\n                            <Field\n                                required\n                                name=\"stars\"\n                                className=\"form-control\"\n                                component=\"input\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Text</Label>\n                            <Field\n                                required\n                                name=\"text\"\n                                className=\"form-control\"\n                                component=\"input\"\n                            />\n                        </FormGroup>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button type=\"submit\" disabled={pristine} color=\"primary\">Write Review</Button>\n                        <Button color=\"secondary\" onClick={onClose}>Cancel</Button>\n                    </ModalFooter>\n                </Form>\n            </Modal>\n        )}\n    />\n);\n\nexport default WriteReview;\n"]},"metadata":{},"sourceType":"module"}