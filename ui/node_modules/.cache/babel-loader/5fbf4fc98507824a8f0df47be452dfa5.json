{"ast":null,"code":"import _toConsumableArray from \"/Users/cole.sluggett/Documents/git/Review-Me/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/cole.sluggett/Documents/git/Review-Me/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/cole.sluggett/Documents/git/Review-Me/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cole.sluggett/Documents/git/Review-Me/ui/src/SignUp.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CreateUser\\n    (\\n        $id: ID!, \\n        $username: String!, \\n        $firstName: String, \\n        $lastName: String, \\n        $age: Int, \\n        $bio: String, \\n        $sex: String, \\n        $location: String!, \\n        $phone: String!, \\n        $email: String!,\\n        $password: String!) \\n            {CreateUser\\n                (\\n                    id: $id, \\n                    username: $username, \\n                    firstName: $firstName, \\n                    lastName: $lastName, \\n                    sex: $sex, \\n                    age: $age, \\n                    bio: $bio, \\n                    location: $location, \\n                    phone: $phone, \\n                    email: $email,\\n                    password: $password) {\\n      id\\n      username\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n          {\\n            User{ \\n              username\\n              firstName\\n            }\\n          }\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Mutation, renderToStringWithData } from 'react-apollo';\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./SignUp.css\";\nvar GET_USER = gql(_templateObject());\nvar CREATE_USER = gql(_templateObject2());\nexport var SignUp = function SignUp() {\n  var input;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoInput = _useState2[0],\n      setTodoInput = _useState2[1];\n\n  var updateCache = function updateCache(cache, _ref) {\n    var data = _ref.data;\n    // Fetch the todos from the cache\n    var existingTodos = cache.readQuery({\n      query: GET_USER\n    }); // Add the new todo to the cache\n\n    var newTodo = data.insert_todos.returning[0];\n    cache.writeQuery({\n      query: GET_USER,\n      data: {\n        todos: [newTodo].concat(_toConsumableArray(existingTodos.todos))\n      }\n    });\n  };\n\n  var _useMutation = useMutation(CREATE_USER),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addTodo = _useMutation2[0];\n\n  return React.createElement(\"form\", {\n    className: \"formInput\",\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      addTodo({\n        variables: {\n          todo: todoInput,\n          isPublic: isPublic\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"input\",\n    placeholder: \"What needs to be done?\",\n    value: todoInput,\n    onChange: function onChange(e) {\n      return setTodoInput(e.target.value);\n    },\n    ref: function ref(n) {\n      return input = n;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"inputMarker fa fa-angle-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }));\n}; // export class SignUp extends Component {\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             id: '',\n//             username: '',\n//             firstName: '',\n//             lastName: '',\n//             age: 0,\n//             bio: '',\n//             sex: '',\n//             location: '',\n//             phone: '',\n//             email: '',\n//             password: '',\n//         };\n//         this.createUser.bind(this);\n//     }\n//     createUser(){\n//         return null;\n//     }\n//     render() {\n//         const {\n//             id,\n//             username,\n//             firstName,\n//             lastName,\n//             age,\n//             bio,\n//             sex,\n//             location,\n//             phone,\n//             email,\n//             password\n//         } = this.state\n//         return (\n//             <Form className=\"mr-auto ml-auto test\">\n//                 <Row>\n//                     <Col md={8}>\n//                         <FormGroup>\n//                             <Label for=\"Email\">Email</Label>\n//                             <Input\n//                                 type=\"email\"\n//                                 name=\"email\"\n//                                 id=\"exampleEmail\"\n//                                 placeholder=\"Enter your Email here!\"\n//                                 value={email}\n//                                 onChange={e => this.setState({ email: e.target.value })}\n//                             />\n//                         </FormGroup>\n//                     </Col>\n//                     <Col md={4}>\n//                         <FormGroup>\n//                             <Label for=\"Age\">Age</Label>\n//                             <Input\n//                                 type=\"number\"\n//                                 name=\"age\"\n//                                 id=\"age\"\n//                                 placeholder=\"How old are you?\"\n//                                 max=\"110\"\n//                                 min=\"8\"\n//                                 value={age}\n//                                 onChange={e => this.setState({ age: e.target.value })}\n//                             />\n//                         </FormGroup>\n//                     </Col>\n//                 </Row>\n//                 <Row>\n//                     <Col md={8}>\n//                         <FormGroup>\n//                             <Label for=\"firstName\">firstName</Label>\n//                             <Input\n//                                 name=\"firstName\"\n//                                 id=\"firstName\"\n//                                 placeholder=\"Enter your firstName here!\"\n//                                 value={firstName}\n//                                 onChange={e => this.setState({ firstName: e.target.value })}\n//                             />\n//                         </FormGroup>\n//                     </Col>\n//                     <Col md={4}>\n//                         <FormGroup>\n//                             <Label for=\"lastName\">lastName</Label>\n//                             <Input\n//                                 name=\"lastName\"\n//                                 id=\"lastName\"\n//                                 placeholder=\"Enter your lastName here!\"\n//                                 value={lastName}\n//                                 onChange={e => this.setState({ lastName: e.target.value })}\n//                             />\n//                         </FormGroup>\n//                     </Col>\n//                 </Row>\n//                 <FormGroup>\n//                     <Label for=\"Username\">Username</Label>\n//                     <Input\n//                         name=\"username\"\n//                         id=\"username\"\n//                         placeholder=\"Come up with something unique!\"\n//                         value={username}\n//                         onChange={e => this.setState({ username: e.target.value })}\n//                     />\n//                 </FormGroup>\n//                 <FormGroup>\n//                     <Label for=\"id\">id</Label>\n//                     <Input\n//                         name=\"id\"\n//                         id=\"id\"\n//                         placeholder=\"Come up with something unique!\"\n//                         value={id}\n//                         onChange={e => this.setState({ id: e.target.value })}\n//                     />\n//                 </FormGroup>\n//                 <FormGroup>\n//                     <Label for=\"Password\">Password</Label>\n//                     <Input\n//                         type=\"password\"\n//                         name=\"password\"\n//                         id=\"Password\"\n//                         placeholder=\"Create your new password here!\"\n//                         value={password}\n//                         onChange={e => this.setState({ password: e.target.value })}\n//                     />\n//                 </FormGroup>\n//                 <FormGroup>\n//                     <Label for=\"Sex\">Select Sex</Label>\n//                     <Input\n//                         type=\"select\"\n//                         name=\"Sex\"\n//                         id=\"SexSelect\"\n//                         value={sex}\n//                         onChange={e => this.setState({ sex: e.target.value })} >\n//                         <option>Female</option>\n//                         <option>Male</option>\n//                     </Input>\n//                 </FormGroup>\n//                 <FormGroup>\n//                     <Label for=\"Location\">Location</Label>\n//                     <Input\n//                         name=\"location\"\n//                         id=\"location\"\n//                         placeholder=\"Come up with something unique!\"\n//                         value={location}\n//                         onChange={e => this.setState({ location: e.target.value })}\n//                     />\n//                 </FormGroup>\n//                 <FormGroup>\n//                     <Label for=\"Phone\">Phone</Label>\n//                     <Input\n//                         name=\"phone\"\n//                         id=\"phone\"\n//                         placeholder=\"Come up with something unique!\"\n//                         value={phone}\n//                         onChange={e => this.setState({ phone: e.target.value })}\n//                     />\n//                 </FormGroup>\n//                 <FormGroup>\n//                     <Label for=\"exampleText\">Tell everyone about you! Bio:</Label>\n//                     <Input\n//                         type=\"textarea\"\n//                         name=\"text\"\n//                         id=\"exampleText\"\n//                         value={bio}\n//                         onChange={e => this.setState({ bio: e.target.value })}\n//                     />\n//                 </FormGroup>\n//                 <Mutation mutation={CREATE_USER} variables={{\n//                     id,\n//                     username,\n//                     firstName,\n//                     lastName,\n//                     age,\n//                     bio,\n//                     sex,\n//                     location,\n//                     phone,\n//                     email,\n//                     password }}>\n//                     {<button onClick={createUser}>Submit</button>}\n//                 </Mutation>\n//             </Form>\n//         );\n//     }\n// }","map":{"version":3,"sources":["/Users/cole.sluggett/Documents/git/Review-Me/ui/src/SignUp.js"],"names":["React","useState","Component","Col","Row","Button","Form","FormGroup","Label","Input","FormText","Mutation","renderToStringWithData","useMutation","gql","GET_USER","CREATE_USER","SignUp","input","todoInput","setTodoInput","updateCache","cache","data","existingTodos","readQuery","query","newTodo","insert_todos","returning","writeQuery","todos","addTodo","e","preventDefault","variables","todo","isPublic","target","value","n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,KAA5C,EAAmDC,KAAnD,EAA0DC,QAA1D,QAA0E,YAA1E;AACA,SAASC,QAAT,EAAmBC,sBAAnB,QAAiD,cAAjD;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAO,sCAAP;AACA,OAAO,cAAP;AAGA,IAAMC,QAAQ,GAAGD,GAAH,mBAAd;AASA,IAAME,WAAW,GAAGF,GAAH,oBAAjB;AAiCA,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS,GAAM;AACxB,MAAIC,KAAJ;;AADwB,kBAEUjB,QAAQ,CAAC,EAAD,CAFlB;AAAA;AAAA,MAEjBkB,SAFiB;AAAA,MAENC,YAFM;;AAIxB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,QAAqB;AAAA,QAAXC,IAAW,QAAXA,IAAW;AACrC;AACA,QAAMC,aAAa,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAClCC,MAAAA,KAAK,EAAEX;AAD2B,KAAhB,CAAtB,CAFqC,CAKrC;;AACA,QAAMY,OAAO,GAAGJ,IAAI,CAACK,YAAL,CAAkBC,SAAlB,CAA4B,CAA5B,CAAhB;AACAP,IAAAA,KAAK,CAACQ,UAAN,CAAiB;AACbJ,MAAAA,KAAK,EAAEX,QADM;AAEbQ,MAAAA,IAAI,EAAE;AAAEQ,QAAAA,KAAK,GAAGJ,OAAH,4BAAeH,aAAa,CAACO,KAA7B;AAAP;AAFO,KAAjB;AAIH,GAXD;;AAJwB,qBAiBNlB,WAAW,CAACG,WAAD,CAjBL;AAAA;AAAA,MAiBjBgB,OAjBiB;;AAmBxB,SACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAE,kBAACC,CAAD,EAAO;AACzCA,MAAAA,CAAC,CAACC,cAAF;AACAF,MAAAA,OAAO,CAAC;AAAEG,QAAAA,SAAS,EAAE;AAAEC,UAAAA,IAAI,EAAEjB,SAAR;AAAmBkB,UAAAA,QAAQ,EAARA;AAAnB;AAAb,OAAD,CAAP;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AACI,IAAA,SAAS,EAAC,OADd;AAEI,IAAA,WAAW,EAAC,wBAFhB;AAGI,IAAA,KAAK,EAAElB,SAHX;AAII,IAAA,QAAQ,EAAE,kBAAAc,CAAC;AAAA,aAAKb,YAAY,CAACa,CAAC,CAACK,MAAF,CAASC,KAAV,CAAjB;AAAA,KAJf;AAKI,IAAA,GAAG,EAAE,aAAAC,CAAC;AAAA,aAAKtB,KAAK,GAAGsB,CAAb;AAAA,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAWI;AAAG,IAAA,SAAS,EAAC,+BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ;AAeH,CAlCM,C,CAqsourcesContent":["import React, { useState, Component } from 'react';\n\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Mutation, renderToStringWithData } from 'react-apollo';\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./SignUp.css\";\n\n\nconst GET_USER = gql`\n          {\n            User{ \n              username\n              firstName\n            }\n          }\n        `;\n\nconst CREATE_USER = gql`\n  mutation CreateUser\n    (\n        $id: ID!, \n        $username: String!, \n        $firstName: String, \n        $lastName: String, \n        $age: Int, \n        $bio: String, \n        $sex: String, \n        $location: String!, \n        $phone: String!, \n        $email: String!,\n        $password: String!) \n            {CreateUser\n                (\n                    id: $id, \n                    username: $username, \n                    firstName: $firstName, \n                    lastName: $lastName, \n                    sex: $sex, \n                    age: $age, \n                    bio: $bio, \n                    location: $location, \n                    phone: $phone, \n                    email: $email,\n                    password: $password) {\n      id\n      username\n    }\n  }\n`;\n\nexport const SignUp = () => {\n    let input;\n    const [todoInput, setTodoInput] = useState('');\n\n    const updateCache = (cache, { data }) => {\n        // Fetch the todos from the cache\n        const existingTodos = cache.readQuery({\n            query: GET_USER\n        });\n        // Add the new todo to the cache\n        const newTodo = data.insert_todos.returning[0];\n        cache.writeQuery({\n            query: GET_USER,\n            data: { todos: [newTodo, ...existingTodos.todos] }\n        });\n    };\n\n    const [addTodo] = useMutation(CREATE_USER);\n\n    return (\n        <form className=\"formInput\" onSubmit={(e) => {\n            e.preventDefault();\n            addTodo({ variables: { todo: todoInput, isPublic } });\n        }}>\n            <input\n                className=\"input\"\n                placeholder=\"What needs to be done?\"\n                value={todoInput}\n                onChange={e => (setTodoInput(e.target.value))}\n                ref={n => (input = n)}\n            />\n            <i className=\"inputMarker fa fa-angle-right\" />\n        </form>\n    );\n};\n\n\n// export class SignUp extends Component {\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             id: '',\n//             username: '',\n//             firstName: '',\n//             lastName: '',\n//             age: 0,\n//             bio: '',\n//             sex: '',\n//             location: '',\n//             phone: '',\n//             email: '',\n//             password: '',\n//         };\n//         this.createUser.bind(this);\n//     }\n    \n\n//     createUser(){\n//         return null;\n//     }\n\n\n//     render() {\n//         const {\n//             id,\n//             username,\n//             firstName,\n//             lastName,\n//             age,\n//             bio,\n//             sex,\n//             location,\n//             phone,\n//             email,\n//             password\n//         } = this.state\n\n//         return (\n//             <Form className=\"mr-auto ml-auto test\">\n//                 <Row>\n//                     <Col md={8}>\n//                         <FormGroup>\n//                             <Label for=\"Email\">Email</Label>\n//                             <Input\n//                                 type=\"email\"\n//                                 name=\"email\"\n//                                 id=\"exampleEmail\"\n//                                 placeholder=\"Enter your Email here!\"\n//                                 value={email}\n//                                 onChange={e => this.setState({ email: e.target.value })}\n//                             />\n//                         </FormGroup>\n//                     </Col>\n//                     <Col md={4}>\n//                         <FormGroup>\n//                             <Label for=\"Age\">Age</Label>\n//                             <Input\n//                                 type=\"number\"\n//                                 name=\"age\"\n//                                 id=\"age\"\n//                                 placeholder=\"How old are you?\"\n//                                 max=\"110\"\n//                                 min=\"8\"\n//                                 value={age}\n//                                 onChange={e => this.setState({ age: e.target.value })}\n//                             />\n//                         </FormGroup>\n//                     </Col>\n//                 </Row>\n//                 <Row>\n//                     <Col md={8}>\n//                         <FormGroup>\n//                             <Label for=\"firstName\">firstName</Label>\n//                             <Input\n//                                 name=\"firstName\"\n//                                 id=\"firstName\"\n//                                 placeholder=\"Enter your firstName here!\"\n//                                 value={firstName}\n//                                 onChange={e => this.setState({ firstName: e.target.value })}\n//                             />\n//                         </FormGroup>\n//                     </Col>\n//                     <Col md={4}>\n//                         <FormGroup>\n//                             <Label for=\"lastName\">lastName</Label>\n//                             <Input\n//                                 name=\"lastName\"\n//                                 id=\"lastName\"\n//                                 placeholder=\"Enter your lastName here!\"\n//                                 value={lastName}\n//                                 onChange={e => this.setState({ lastName: e.target.value })}\n//                             />\n//                         </FormGroup>\n//                     </Col>\n//                 </Row>\n//                 <FormGroup>\n//                     <Label for=\"Username\">Username</Label>\n//                     <Input\n//                         name=\"username\"\n//                         id=\"username\"\n//                         placeholder=\"Come up with something unique!\"\n//                         value={username}\n//                         onChange={e => this.setState({ username: e.target.value })}\n//                     />\n//                 </FormGroup>\n//                 <FormGroup>\n//                     <Label for=\"id\">id</Label>\n//                     <Input\n//                         name=\"id\"\n//                         id=\"id\"\n//                         placeholder=\"Come up with something unique!\"\n//                         value={id}\n//                         onChange={e => this.setState({ id: e.target.value })}\n//                     />\n//                 </FormGroup>\n//                 <FormGroup>\n//                     <Label for=\"Password\">Password</Label>\n//                     <Input\n//                         type=\"password\"\n//                         name=\"password\"\n//                         id=\"Password\"\n//                         placeholder=\"Create your new password here!\"\n//                         value={password}\n//                         onChange={e => this.setState({ password: e.target.value })}\n//                     />\n//                 </FormGroup>\n//                 <FormGroup>\n//                     <Label for=\"Sex\">Select Sex</Label>\n//                     <Input\n//                         type=\"select\"\n//                         name=\"Sex\"\n//                         id=\"SexSelect\"\n//                         value={sex}\n//                         onChange={e => this.setState({ sex: e.target.value })} >\n//                         <option>Female</option>\n//                         <option>Male</option>\n//                     </Input>\n//                 </FormGroup>\n//                 <FormGroup>\n//                     <Label for=\"Location\">Location</Label>\n//                     <Input\n//                         name=\"location\"\n//                         id=\"location\"\n//                         placeholder=\"Come up with something unique!\"\n//                         value={location}\n//                         onChange={e => this.setState({ location: e.target.value })}\n//                     />\n//                 </FormGroup>\n//                 <FormGroup>\n//                     <Label for=\"Phone\">Phone</Label>\n//                     <Input\n//                         name=\"phone\"\n//                         id=\"phone\"\n//                         placeholder=\"Come up with something unique!\"\n//                         value={phone}\n//                         onChange={e => this.setState({ phone: e.target.value })}\n//                     />\n//                 </FormGroup>\n//                 <FormGroup>\n//                     <Label for=\"exampleText\">Tell everyone about you! Bio:</Label>\n//                     <Input\n//                         type=\"textarea\"\n//                         name=\"text\"\n//                         id=\"exampleText\"\n//                         value={bio}\n//                         onChange={e => this.setState({ bio: e.target.value })}\n//                     />\n//                 </FormGroup>\n//                 <Mutation mutation={CREATE_USER} variables={{\n//                     id,\n//                     username,\n//                     firstName,\n//                     lastName,\n//                     age,\n//                     bio,\n//                     sex,\n//                     location,\n//                     phone,\n//                     email,\n//                     password }}>\n//                     {<button onClick={createUser}>Submit</button>}\n//                 </Mutation>\n//             </Form>\n//         );\n//     }\n// }"]},"metadata":{},"sourceType":"module"}