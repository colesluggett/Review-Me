{"ast":null,"code":"var _jsxFileName = \"/Users/cole.sluggett/Documents/git/Review-Me/ui/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nvar client = new ApolloClient({\n  uri: process.env.REACT_APP_GRAPHQL_URI\n});\n\nvar Main = function Main() {\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(Main(), document.getElementById(\"root\"));\nregisterServiceWorker();","map":{"version":3,"sources":["/Users/cole.sluggett/Documents/git/Review-Me/ui/src/index.js"],"names":["React","ReactDOM","App","registerServiceWorker","ApolloClient","ApolloProvider","client","uri","process","env","REACT_APP_GRAPHQL_URI","Main","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,IAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC9BG,EAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADa,CAAjB,CAAf;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,SACX,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEL,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADW;AAAA,CAAb;;AAMAL,QAAQ,CAACW,MAAT,CAAgBD,IAAI,EAApB,EAAwBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAxB;AACAX,qBAAqB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_GRAPHQL_URI\n});\n\nconst Main = () => (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n\nReactDOM.render(Main(), document.getElementById(\"root\"));\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}